package com.example.demo.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {
	// 패스워드 암호화 하기
	// Bean 어노테이션을 적으면 해당 메소드의 리턴되는 오브잭트를 IoC로 등록
	@Bean
	public BCryptPasswordEncoder endocePwd() {
		return new BCryptPasswordEncoder();
	}
	
	@Override
	protected void configure(HttpSecurity http) throws Exception
	{
		http.csrf().disable();
		http.authorizeRequests()
		.antMatchers("/user/**").authenticated()
 		.antMatchers("/manager/**").access("hasRole('ROLE_ADMIN') or hasRole('ROLE_MANAGER')")
 		.antMatchers("/admin/**").access("hasRole('ROLE_ADMIN')")
 		//유저,매니저,어드민이 아닌경우 모두 허용됨
 		.anyRequest().permitAll()
		.and()
			.formLogin()
			.loginPage("/loginForm")
			.loginProcessingUrl("/loginAction3")
			.defaultSuccessUrl("/");
		
	}
}
