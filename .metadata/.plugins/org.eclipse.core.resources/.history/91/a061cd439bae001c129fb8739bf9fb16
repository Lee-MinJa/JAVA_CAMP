package com.example.demo.util;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.example.demo.Review_Cmnt.ReviewCmntLogic;

@RestController
@RequestMapping("/Image/*")
public class ImageController {
	Logger logger = LogManager.getLogger(ImageController.class);
	@Autowired
	private ImageLogic imageLogic = null;
	
	
	
	//댓글 조회해서 대댓글 작성할때 사용하면될거같음 댓글 자세히 보기 기능?
	@PostMapping("ImageList")
	public List<Map<String,Object>> ImageList(@RequestParam Map<String,Object> pMap) 
	
	{
		logger.info("PrBoardList 호출 성공");
		logger.info("사용자가 입력한 정보 ==> "+pMap);
		List<Map<String,Object>> ImageList = null;
		ImageList=imageLogic.ImageList(pMap);
		
		return ImageList;
		}
	
	@ApiOperation(value = "피드 등록 ", notes = "성공시 200, 실패시 에러를 반환합니다. \n ")
	@PostMapping("create")
	public ResponseEntity<String> createFeed( @RequestParam("file") MultipartFile file) {
          // 시간과 originalFilename으로 매핑 시켜서 src 주소를 만들어 낸다.
          Date date = new Date();
          StringBuilder sb = new StringBuilder();

          // file image 가 없을 경우
          if (file.isEmpty()) {
         	 sb.append("none");
          } else {
         	 sb.append(date.getTime());
        	  sb.append(file.getOriginalFilename());
          }

          if (!file.isEmpty()) {
      	    File dest = new File("C://images/feed/" + sb.toString());
            try {
               file.transferTo(dest);
            } catch (IllegalStateException e) {
               e.printStackTrace();
            } catch (IOException e) {
               e.printStackTrace();
            }
          // db에 파일 위치랑 번호 등록
          }
		return new ResponseEntity<String>(SUCCESS, HttpStatus.OK);
	}
	
}